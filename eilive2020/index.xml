<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EI Live 2020 on Joshua Russell</title>
    <link>https://jbrussell.github.io/eilive2020/</link>
    <description>Recent content in EI Live 2020 on Joshua Russell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Tue, 12 May 2020 00:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://jbrussell.github.io/eilive2020/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2011 Tohoku Earthquake</title>
      <link>https://jbrussell.github.io/eilive2020/part2_sonification/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 -0400</pubDate>
      
      <guid>https://jbrussell.github.io/eilive2020/part2_sonification/</guid>
      <description>Bokeh Plot     Bokeh.set_log_level(&#34;info&#34;);  (function(root, factory) { factory(root[&#34;Bokeh&#34;]); })(this, function(Bokeh) { var define; return (function outer(modules, entry) { if (Bokeh != null) { return Bokeh.register_plugin(modules, entry); } else { throw new Error(&#34;Cannot find Bokeh. You have to load it prior to loading plugins.&#34;); } }) ({ &#34;custom/main&#34;: function(require, module, exports) { var models = { &#34;AudioPlayerModel&#34;: require(&#34;custom/bokeh_audio_player.audio_player_model&#34;).AudioPlayerModel }; require(&#34;base&#34;).register_models(models); module.exports = models; }, &#34;custom/bokeh_audio_player.audio_player_model&#34;: function(require, module, exports) { &#34;</description>
    </item>
    
    <item>
      <title>Additional Resources</title>
      <link>https://jbrussell.github.io/eilive2020/part3_resources/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 -0400</pubDate>
      
      <guid>https://jbrussell.github.io/eilive2020/part3_resources/</guid>
      <description>Download the code here:  
More data sonification by Ben Holtzman can be found at the Seismic Sound Lab homepage.</description>
    </item>
    
    <item>
      <title>Global Seismicity</title>
      <link>https://jbrussell.github.io/eilive2020/part1a_globalearthquakes/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 -0400</pubDate>
      
      <guid>https://jbrussell.github.io/eilive2020/part1a_globalearthquakes/</guid>
      <description>Hundreds of earthquakes occur across the globe every day, but most of them are too small for people to feel. Here, we will dive into the data and explore some of the larger magnitude earthquakes (greater than M5.0) that have occurred over the past several years.
We can start by looking at where earthquakes occur spatially. The interactive map below shows the past 5 years of earthquakes, where each circle represents a single earthquake.</description>
    </item>
    
    <item>
      <title>Seismic Noise in New York City</title>
      <link>https://jbrussell.github.io/eilive2020/part1b_seismicnoisenyc/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 -0400</pubDate>
      
      <guid>https://jbrussell.github.io/eilive2020/part1b_seismicnoisenyc/</guid>
      <description>import bokeh from bokeh.models import Line, Span, ColumnDataSource, DatetimeTickFormatter from bokeh.plotting import figure, output_notebook, show, output_file import time # Define figure attributes p = figure(x_axis_type=&#39;datetime&#39;,plot_width=800, plot_height=400, sizing_mode = &#39;scale_width&#39;, x_range=(df.t_cent.min(),df.t_cent.max()), y_range=([0, df.daily_average.max()*1e9*2]), x_axis_label=&#39;Date&#39;, y_axis_label=&#39;Average Ground Displacement (nm)&#39;, title=&#39;NYC Seismic Noise&#39;, tools=[&#39;save&#39;,&#39;box_zoom&#39;,&#39;ywheel_zoom&#39;,&#39;xwheel_zoom&#39;,&#39;reset&#39;,&#39;crosshair&#39;,&#39;pan&#39;]) # Plot lines for hourly and daily displacement p.multi_line([df.t_cent, df.t_cent], [df.disp_avg*1e9, df.daily_average*1e9], line_color=[&amp;quot;lightsteelblue&amp;quot;,&amp;quot;steelblue&amp;quot;], line_width=[2, 4]) # Plot vertical lines marking stay at home and first nyc death # First need to convert datetime to milliseconds for some reason.</description>
    </item>
    
  </channel>
</rss>